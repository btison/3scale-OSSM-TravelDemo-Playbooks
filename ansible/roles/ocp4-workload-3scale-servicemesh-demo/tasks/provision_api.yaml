---
- name: Retrieve 3scale Admin URL and token from 
  k8s_info:
    api_version: v1
    kind: Secret
    name: "system-seed"
    namespace: "{{ threescale_project }}"
  register: _3scale_secret
  retries: 3
  delay: 5
  until:
    - _3scale_secret.resources is defined
    - _3scale_secret.resources | length | int > 0
    - _3scale_secret.resources[0].data is defined
    - _3scale_secret.resources[0].data.TENANT_NAME is defined

- name: Setting 3scale tenant parameters - provider key and admin url
  set_fact:
    _tenant_provider_key: "{{ _3scale_secret.resources[0].data.ADMIN_ACCESS_TOKEN | b64decode }}"
    _tenant_admin_url: "https://{{ _3scale_secret.resources[0].data.TENANT_NAME | b64decode }}-admin.{{route_subdomain}}"

- name: Setting the _tenant_basic_auth_token param
  set_fact:
    _tenant_basic_auth_token: "Basic {{ (':' + _tenant_provider_key) | b64encode }}"

- name: Create Provider Account secret
  k8s:
    state: present
    resource_definition: "{{ lookup('template', 'threescale-provider-account.yaml.j2') }}" 
  vars:
    adminURL: '{{ _tenant_admin_url }}'
    token: '{{ _tenant_provider_key }}'


# Create Applications for each Service
- name: Get the Developer account id
  uri:
    method: GET
    url: "{{_tenant_admin_url}}/admin/api/accounts.xml"
    headers:
      Authorization: "{{ _tenant_basic_auth_token }}"
    return_content: true
    status_code: 200
  register: _tenant_account_list
  until: _tenant_account_list is defined

- name: Extract Developer Account ID
  xml:
    xmlstring: "{{_tenant_account_list.content}}"
    xpath: //accounts/account[1]/id
    content: text
  register: _tenant_developer_id_parse


- name: Set _tenant_developer_id
  set_fact: _tenant_developer_id={{ _tenant_developer_id_parse.matches[0].id }}  



# Create 3scale WASM Custom Resources & TravelDemo Istio API in 3scale
- name: Create TravelDemo Istio Product
  k8s:
    state: present
    resource_definition: "{{ lookup('template', 'threescale-traveldemo-istio-product.yaml.j2') }}"      

- name: Wait to synchronize the  Product Istio CRD with 3scale
  k8s_info:
    api_version: capabilities.3scale.net/v1beta1
    kind: Product
    name: "traveldemo-istio-product"
    namespace: "{{ threescale_project }}"
  register: _wait_istio_product
  retries: 8
  delay: 15
  until:
  - _wait_istio_product.resources is defined
  - _wait_istio_product.resources | length | int > 0
  - _wait_istio_product.resources[0].status is defined
  - _wait_istio_product.resources[0].status.conditions is defined
  - ( _wait_istio_product.resources[0].status | to_json | from_json |
    json_query('conditions[?type == `Synced`].status') | join ) == "True"    

- name: Extract Product Id from Product CRD
  set_fact:
    _traveldemo_istio_product_id: '{{_wait_istio_product.resources[0].status.productId }}'


- name: Get TravelDemo Istio API Basic Application Plan 
  uri:
    method: GET
    url: "{{_tenant_admin_url}}/admin/api/services/{{_traveldemo_istio_product_id}}/application_plans.xml"
    headers:
      Authorization: "{{ _tenant_basic_auth_token }}"
    return_content: true
    status_code: 200
  register: _3scale_istio_app_plan_list
  until: _3scale_istio_app_plan_list is defined

- name: Extract TravelDemo Istio Basic Application Plan ID
  xml:
    xmlstring: "{{_3scale_istio_app_plan_list.content}}"
    xpath: //plans/plan/id
    content: text
  register: _traveldemo_istio_application_plan_id_parse   

- name: Set _traveldemo_istio_application_plan_id
  set_fact: _traveldemo_istio_application_plan_id={{ _traveldemo_istio_application_plan_id_parse.matches[0].id }}  

- name: Update TravelDemo Istio API deployment to Istio 
  uri:
    method: PUT
    url: "{{_tenant_admin_url}}/admin/api/services/{{_traveldemo_istio_product_id}}.xml"
    headers:
      Authorization: "{{ _tenant_basic_auth_token }}"
    return_content: true
    body_format: form-urlencoded
    body:
    - [ deployment_option, service_mesh_istio ]
    status_code: 200
  register: _3scale_istio_product_update_response
  until: _3scale_istio_product_update_response is defined

- name: Create TravelDemo Istio API Basic Application for Developer Account 
  uri:
    method: POST
    url: "{{_tenant_admin_url}}/admin/api/accounts/{{_tenant_developer_id}}/applications.xml"
    headers:
      Authorization: "{{ _tenant_basic_auth_token }}"
    return_content: true
    body_format: form-urlencoded
    body:
    - [ plan_id, "{{_traveldemo_istio_application_plan_id}}" ]
    - [ name, "TravelDemo Istio Basic App" ]
    - [ description, "TravelDemo Istio basic Application" ]
    - [ user_key, "{{ocp4_workload_3scale_servicemesh_demo_istio_user_key}}" ]    
    status_code: 201, 422
  register: _3scale_istio_app_create_response
  until: _3scale_istio_app_create_response is defined

- name: Promote TravelDemo Istio API to Production 
  uri:
    method: POST
    url: "{{_tenant_admin_url}}/admin/api/services/{{_traveldemo_istio_product_id}}/proxy/deploy.xml"
    headers:
      Authorization: "{{ _tenant_basic_auth_token }}"
    return_content: true
    status_code: 201
  register: _3scale_proxy_istio_deploy_response
  until: _3scale_proxy_istio_deploy_response is defined  


# # Create 3scale WASM Custom Resources & TravelDemo Istio Partner API in 3scale
# - name: Create TravelDemo Istio Partner Product
#   k8s:
#     state: present
#     resource_definition: "{{ lookup('template', 'threescale-traveldemo-istio-partner-product.yaml.j2') }}"      

# - name: Wait to synchronize the  Partner Product Istio CRD with 3scale
#   k8s_info:
#     api_version: capabilities.3scale.net/v1beta1
#     kind: Product
#     name: "traveldemo-istio-partner-product"
#     namespace: "{{ threescale_project }}"
#   register: _wait_istio_partner_product
#   retries: 8
#   delay: 15
#   until:
#   - _wait_istio_partner_product.resources is defined
#   - _wait_istio_partner_product.resources | length | int > 0
#   - _wait_istio_partner_product.resources[0].status is defined
#   - _wait_istio_partner_product.resources[0].status.conditions is defined
#   - ( _wait_istio_partner_product.resources[0].status | to_json | from_json |
#     json_query('conditions[?type == `Synced`].status') | join ) == "True"    

# - name: Extract Partner Product Id from Product CRD
#   set_fact:
#     _traveldemo_istio_partner_product_id: '{{_wait_istio_partner_product.resources[0].status.productId }}'


# - name: Get TravelDemo Istio API Basic Partner Application Plan 
#   uri:
#     method: GET
#     url: "{{_tenant_admin_url}}/admin/api/services/{{_traveldemo_istio_partner_product_id}}/application_plans.xml"
#     headers:
#       Authorization: "{{ _tenant_basic_auth_token }}"
#     return_content: true
#     status_code: 200
#   register: _3scale_istio_partner_app_plan_list
#   until: _3scale_istio_partner_app_plan_list is defined

# - name: Extract TravelDemo Istio Partner Basic Application Plan ID
#   xml:
#     xmlstring: "{{_3scale_istio_partner_app_plan_list.content}}"
#     xpath: //plans/plan/id
#     content: text
#   register: _traveldemo_istio_partner_application_plan_id_parse   

# - name: Set _traveldemo_istio_partner_application_plan_id
#   set_fact: _traveldemo_istio_partner_application_plan_id={{ _traveldemo_istio_partner_application_plan_id_parse.matches[0].id }}  

# - name: Update TravelDemo Istio Partner API deployment to Istio 
#   uri:
#     method: PUT
#     url: "{{_tenant_admin_url}}/admin/api/services/{{_traveldemo_istio_partner_product_id}}.xml"
#     headers:
#       Authorization: "{{ _tenant_basic_auth_token }}"
#     return_content: true
#     body_format: form-urlencoded
#     body:
#     - [ deployment_option, service_mesh_istio ]
#     status_code: 200
#   register: _3scale_istio_partner_product_update_response
#   until: _3scale_istio_partner_product_update_response is defined

# - name: Create TravelDemo Istio API Basic Partner Green Application for Developer Account 
#   uri:
#     method: POST
#     url: "{{_tenant_admin_url}}/admin/api/accounts/{{_tenant_developer_id}}/applications.xml"
#     headers:
#       Authorization: "{{ _tenant_basic_auth_token }}"
#     return_content: true
#     body_format: form-urlencoded
#     body:
#     - [ plan_id, "{{_traveldemo_istio_partner_application_plan_id}}" ]
#     - [ name, "Green App" ]
#     - [ description, "Green Partner Application" ]
#     - [ user_key, "greensecret" ]    
#     status_code: 201, 422
#   register: _3scale_istio_greenpartner_app_create_response
#   until: _3scale_istio_greenpartner_app_create_response is defined

# - name: Create TravelDemo Istio API Basic Partner Red Application for Developer Account 
#   uri:
#     method: POST
#     url: "{{_tenant_admin_url}}/admin/api/accounts/{{_tenant_developer_id}}/applications.xml"
#     headers:
#       Authorization: "{{ _tenant_basic_auth_token }}"
#     return_content: true
#     body_format: form-urlencoded
#     body:
#     - [ plan_id, "{{_traveldemo_istio_partner_application_plan_id}}" ]
#     - [ name, "Red App" ]
#     - [ description, "Red Partner Application" ]
#     - [ user_key, "redsecret" ]    
#     status_code: 201, 422
#   register: _3scale_istio_redpartner_app_create_response
#   until: _3scale_istio_redpartner_app_create_response is defined

# - name: Create TravelDemo Istio API Basic Partner Blue Application for Developer Account 
#   uri:
#     method: POST
#     url: "{{_tenant_admin_url}}/admin/api/accounts/{{_tenant_developer_id}}/applications.xml"
#     headers:
#       Authorization: "{{ _tenant_basic_auth_token }}"
#     return_content: true
#     body_format: form-urlencoded
#     body:
#     - [ plan_id, "{{_traveldemo_istio_partner_application_plan_id}}" ]
#     - [ name, "Blue App" ]
#     - [ description, "Blue Partner Application" ]
#     - [ user_key, "bluesecret" ]    
#     status_code: 201, 422
#   register: _3scale_istio_bluepartner_app_create_response
#   until: _3scale_istio_bluepartner_app_create_response is defined

# - name: Promote TravelDemo Istio API to Production 
#   uri:
#     method: POST
#     url: "{{_tenant_admin_url}}/admin/api/services/{{_traveldemo_istio_partner_product_id}}/proxy/deploy.xml"
#     headers:
#       Authorization: "{{ _tenant_basic_auth_token }}"
#     return_content: true
#     status_code: 201
#   register: _3scale_partner_proxy_istio_deploy_response
#   until: _3scale_partner_proxy_istio_deploy_response is defined 



# Create 3scale TravelDemo Istio Partner API in 3scale - APIcast
- name: Create Travel API Backend
  k8s:
    state: present
    resource_definition: "{{ lookup('template', 'threescale-travelapi-backend.yaml.j2') }}" 


- name: Wait to synchronize the  Backend CRD with 3scale
  k8s_info:
    api_version: capabilities.3scale.net/v1beta1
    kind: Backend
    name: "travel-api-istio-backend"
    namespace: "{{ threescale_project }}"
  register: _wait_backend
  retries: 8
  delay: 15
  until:
  - _wait_backend.resources is defined
  - _wait_backend.resources | length | int > 0
  - _wait_backend.resources[0].status is defined
  - _wait_backend.resources[0].status.conditions is defined
  - ( _wait_backend.resources[0].status | to_json | from_json |
    json_query('conditions[?type == `Synced`].status') | join ) == "True"

- name: Create Travel Partner API Product
  k8s:
    state: present
    resource_definition: "{{ lookup('template', 'threescale-traveldemo-istio-partner-product.yaml.j2') }}"    


- name: Wait to synchronize the  Product CRD with 3scale
  k8s_info:
    api_version: capabilities.3scale.net/v1beta1
    kind: Product
    name: "traveldemo-istio-partner-product"
    namespace: "{{ threescale_project }}"
  register: _wait_istio_partner_product
  retries: 8
  delay: 15
  until:
  - _wait_istio_partner_product.resources is defined
  - _wait_istio_partner_product.resources | length | int > 0
  - _wait_istio_partner_product.resources[0].status is defined
  - _wait_istio_partner_product.resources[0].status.conditions is defined
  - ( _wait_istio_partner_product.resources[0].status | to_json | from_json |
    json_query('conditions[?type == `Synced`].status') | join ) == "True"    

- name: Extract Partner Product Id from Product CRD
  set_fact:
    _traveldemo_istio_partner_product_id: '{{_wait_istio_partner_product.resources[0].status.productId }}'


- name: Get TravelDemo Istio API Basic Partner Application Plan 
  uri:
    method: GET
    url: "{{_tenant_admin_url}}/admin/api/services/{{_traveldemo_istio_partner_product_id}}/application_plans.xml"
    headers:
      Authorization: "{{ _tenant_basic_auth_token }}"
    return_content: true
    status_code: 200
  register: _3scale_istio_partner_app_plan_list
  until: _3scale_istio_partner_app_plan_list is defined

- name: Extract TravelDemo Istio Partner Basic Application Plan ID
  xml:
    xmlstring: "{{_3scale_istio_partner_app_plan_list.content}}"
    xpath: //plans/plan/id
    content: text
  register: _traveldemo_istio_partner_application_plan_id_parse   

- name: Set _traveldemo_istio_partner_application_plan_id
  set_fact: _traveldemo_istio_partner_application_plan_id={{ _traveldemo_istio_partner_application_plan_id_parse.matches[0].id }}

- name: Promote TravelDemo Istio Partner API to Staging 
  uri:
    method: POST
    url: "{{_tenant_admin_url}}/admin/api/services/{{_traveldemo_istio_partner_product_id}}/proxy/deploy.xml"
    headers:
      Authorization: "{{ _tenant_basic_auth_token }}"
    return_content: true
    status_code: 201
  register: _3scale_proxy_deploy_response
  until: _3scale_proxy_deploy_response is defined

- name: Create TravelDemo Istio API Basic Partner Green Application for Developer Account 
  uri:
    method: POST
    url: "{{_tenant_admin_url}}/admin/api/accounts/{{_tenant_developer_id}}/applications.xml"
    headers:
      Authorization: "{{ _tenant_basic_auth_token }}"
    return_content: true
    body_format: form-urlencoded
    body:
    - [ plan_id, "{{_traveldemo_istio_partner_application_plan_id}}" ]
    - [ name, "Green App" ]
    - [ description, "Green Partner Application" ]
    - [ user_key, "greensecret" ]    
    status_code: 201, 422
  register: _3scale_istio_greenpartner_app_create_response
  until: _3scale_istio_greenpartner_app_create_response is defined

- name: Create TravelDemo Istio API Basic Partner Red Application for Developer Account 
  uri:
    method: POST
    url: "{{_tenant_admin_url}}/admin/api/accounts/{{_tenant_developer_id}}/applications.xml"
    headers:
      Authorization: "{{ _tenant_basic_auth_token }}"
    return_content: true
    body_format: form-urlencoded
    body:
    - [ plan_id, "{{_traveldemo_istio_partner_application_plan_id}}" ]
    - [ name, "Red App" ]
    - [ description, "Red Partner Application" ]
    - [ user_key, "redsecret" ]    
    status_code: 201, 422
  register: _3scale_istio_redpartner_app_create_response
  until: _3scale_istio_redpartner_app_create_response is defined

- name: Create TravelDemo Istio API Basic Partner Blue Application for Developer Account 
  uri:
    method: POST
    url: "{{_tenant_admin_url}}/admin/api/accounts/{{_tenant_developer_id}}/applications.xml"
    headers:
      Authorization: "{{ _tenant_basic_auth_token }}"
    return_content: true
    body_format: form-urlencoded
    body:
    - [ plan_id, "{{_traveldemo_istio_partner_application_plan_id}}" ]
    - [ name, "Blue App" ]
    - [ description, "Blue Partner Application" ]
    - [ user_key, "bluesecret" ]    
    status_code: 201, 422
  register: _3scale_istio_bluepartner_app_create_response
  until: _3scale_istio_bluepartner_app_create_response is defined

- name: Secret Creation for ActiveDocs
  k8s:
    state: present
    resource_definition: "{{ lookup('template', 'threescale-activedoc-secret.yaml.j2') }}"

- name: Deploying ActiveDocs using 3scale Operator Resource
  k8s:
    state: present
    resource_definition: "{{ lookup('template', 'threescale-activedoc-deploy.yaml.j2') }}"

- name: Promote Partner Product to Production
  uri:
    method: POST
    url: '{{_tenant_admin_url}}/admin/api/services/{{_traveldemo_istio_partner_product_id}}/proxy/configs/sandbox/1/promote.json'
    headers:
      Authorization: "{{ _tenant_basic_auth_token }}"
    body_format: form-urlencoded
    body:
    - [ to, "production" ]
    return_content: true
    status_code: 201
  register: _3scale_partner_proxy_istio_prod_deploy_response
  until: _3scale_partner_proxy_istio_prod_deploy_response is defined